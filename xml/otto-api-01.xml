<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
        "http://xml2rfc.tools.ietf.org/authoring/rfc2629.dtd" [
        <!ENTITY RFC2119 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
        <!ENTITY RFC3986 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
        <!ENTITY RFC5785 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5785.xml">
        <!ENTITY RFC7159 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml">
        <!ENTITY RFC6749 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
        <!ENTITY RFC7591 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7591.xml">
        ]>
<rfc category="std" docName="otto-core" id="kantara" ipr="kantara"
     target="draft" version="1.0">
    <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

    <?rfc toc='yes' ?>

    <?rfc tocdepth='4' ?>

    <?rfc symrefs='yes' ?>

    <?rfc sortrefs='yes' ?>

    <?rfc compact='yes' ?>

    <?rfc subcompact='no' ?>

    <front>
        <title abbrev="OTTO Core">OTTO API's 1.0</title>

        <author fullname="Michael Schwartz" initials="M." role="editor"
                surname="Schwartz">
            <organization>Gluu</organization>

            <address>
                <email>mike@gluu.org</email>
            </address>
        </author>

        <author fullname="Janusz Ulanowski," initials="J."
                surname="Ulanowski">
            <organization>HEAnet</organization>

            <address>
                <email>janusz.ulanowski@heanet.ie</email>
            </address>
        </author>

        <author fullname="Yuriy Zabrovarnyy" initials="Y." surname="Zabrovarnyy">
            <organization>Gluu</organization>

            <address>
                <email>yuriy@gluu.org</email>
            </address>
        </author>

        <author fullname="Meghna Joshi" initials="M." surname="Joshi">
            <organization>Gluu</organization>

            <address>
                <email>meg@gluu.org</email>
            </address>
        </author>

        <date day="2" month="April" year="2017"/>

        <abstract>
            <t>This specification defines standard application interfaces that enable
                the creation and management of multi-party federations.
            </t>
        </abstract>
    </front>

    <middle>
        <section anchor="introduction" title="Introduction">
            <t>The Open Trust Taxonomy for Federation Operators (OTTO) defines
                standards to enable the interoperable management of multi-party
                federations--where a central authority creates the rules for membership,
                enabling the participants to more efficiently collaborate. The goal of
                OTTO is to support a range of trust models from very low to very high.
                By providing a common set of API's and a data model, the OTTO standard
                provides a scalable technical infrastructure to solve organizational
                challenges in a number of different ecosystems.
            </t>

            <section title="Notational Conventions">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
                    "OPTIONAL" in this document are to be interpreted as described in
                    <xref target="RFC2119"/>.
                </t>

                <t>Unless otherwise noted, all protocol properties and values are case
                    sensitive.
                </t>
            </section>

            <section anchor="terminology" title="Terminology">
                <t>This specification introduces the following terms
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation">
                            A group of autonomous organizations that agree to abide the
                            authority of a central organization to reduce the cost
                            of collaboration.
                        </t>

                        <t hangText="Registration Authority">
                            An organization that hosts the hardware and software used
                            by Federation operators.
                        </t>

                        <t hangText="Participant">
                            An organization that registers with a Registration Authority
                            for the purpose of joining a Federation.
                        </t>

                        <t hangText="Entity">
                            A techincal service operated by a Particpant, such as
                            an identity provider, website or mobile application.
                        </t>

                        <t hangText="Issuer">
                            Location of the Registration Authority, which MUST be a URI
                            <xref target="RFC3986"/>
                            with a scheme component that MUST be
                            https, a host component, and optionally, port and path components
                            and no query or fragment components.
                        </t>

                    </list>
                </t>
            </section>

            <section anchor="security" title="Security Considerations">
                <t>
                    This specification defines several APIs. The Registration Authority
                    MUST use TLS protection over these endpoints, governed by
                    <xref target="BCP195"/>, which discusses deployment and
                    adoption characteristics of different TLS versions. All endpoints
                    other then the .well-known configuration endpoint SHOULD require some
                    form of authentication and access control, such as Client Authentication
                    as described in
                    <xref target="RFC6749"/>
                    or a separate OAuth access
                    token. The methods of managing and validating these authentication
                    credentials are out of scope of this specification.
                </t>
            </section>

            <section anchor="search-syntax" title="Search Syntax">
                <t>
                    OTTO API supports the depth and the filter searching feature. Those are the query parameter to passed in HTTP GET Request. which provide facility to search, navigate and filter the record.
                </t>

                <section anchor="depth-parameter" title="Depth Parameter">
                    <t>
                        The depth parameter provides the facility to deeply populate records with the full response. The depth parameter also supports to passed the multiple commas separated values. If depth parameter is possible to populated then it returns full response otherwise return an error with "Invalid depth parameter". You can only have depth parameter for the IRI scheme which returns JSON as response.

                        <preamble>The below example is without depth parameter. which only shows the IRI value of the field. Non-normative examples of a without depth request.</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c HTTP/1.1 ]]></artwork>

                        <preamble>Non-normative response of without depth parameter. Some text was removed for readability (indicated by "..."). The detail description of federation refer <xref target="create-federation" />:</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
  ...
  "sponsor": [
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
  ],
  "federates": [
    "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
  ],
  "member": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
  ],
  ...
}

]]>
                        </artwork>

                        <preamble>The below example with depth parameter which deeply populates the federates and return the full response of federates of the Federation. Non-normative examples of a depth request.</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=federates HTTP/1.1 ]]></artwork>

                        <preamble>Non-normative response of depth parameter. Some text was removed for readability (indicated by "..."). The detail description of federation refer <xref target="create-federation" /> and federates refer <xref target="create-entity" />:</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
  ...
  "federates": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": {
        "@id": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df"
      },
      "description": "entity entity",
      "metadata": {
        "@id": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      },
      "federatedBy": [
        {
          "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
        }
      ],
      "supports": [
        {
          "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
        }
      ]
    }
  ],
  ...
}

]]>
                        </artwork>

                        <preamble>The below depth parameter deeply populate the federates and sponsor and return the full response of federates and sponsor of the Federation. Non-normative examples of a multiple depth request.</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=federates,sponsor HTTP/1.1 ]]></artwork>

                        <preamble>Non-normative response of multiple depth parameter. The detail description of federation refer <xref target="create-federation" />, for federates refer <xref target="create-entity" /> and for member refer <xref target="create-participant" /> : </preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
 ...
  "sponsor": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
      "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
      "name": "participant 1",
      "url": "http://otto-test.gluu.org/otto/participant",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "participant participant",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "memberOf": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "operates": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "trustMarkAsserted": "http://pa.org"
    }
  ],
  "federates": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "entity entity",
      "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
      "federatedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ]
    }
  ],
  ...
}
]]>
                        </artwork>
                    </t>
                </section>

                <section anchor="filter-parameter" title="Filter Parameter">
                    <t>
                        OTTO API supports the depth and the filter feature to navigate, search and filter the record. Those are the request query parameter to passed in HTTP GET Request. The depth parameter allows to deeply populated the record and return full response. The filter parameter enables to navigate and find data within your JSON documents. To select items in JSPath, you use a location path which consists of one or more location steps.
                        Every location step starts with one period (.) or two periods (..), depending on the item you're trying to select. It returns the result with the same key which you are passed in filter request. for detail description refer <eref target="https://www.npmjs.com/package/jspath">JSPath Filter</eref>.

                        <preamble>The below parameter filter find the name property and return filtered output with name key. Non-normative examples of a filter request:</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?filter=.name HTTP/1.1 ]]></artwork>
                        <preamble>Non-normative response of filter parameter: </preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "fed1"
  ]
}
]]>
                        </artwork>

                        <preamble>Filter parameter allows passing multiple parameters by the separating comma(,). Non-normative examples of a multiple filter request:</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?filter=.name,.securityContact HTTP/1.1 ]]></artwork>
                        <preamble>Non-normative response of multiple filter parameter: </preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "fed1"
  ],
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ]
}
]]>
                        </artwork>

                        <preamble>Filter parameter allows filtering using nested property. Non-normative examples of a filter using nested property and depth request:</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=federates&filter=.federates.name HTTP/1.1 ]]></artwork>
                        <preamble>Non-normative examples of a filter using nested property and depth response: </preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "federates": {
    "name": [
      "entity 1"
    ]
  }
}
]]>
                        </artwork>

                        <preamble>Filter parameter allows Object predicates can be used in a path expression to filter a subset of items according to boolean expressions working on the properties of each item. All object predicates are parenthesized by curly brackets ({ and }). Non-normative examples of a filter using boolean expressions and depth request:</preamble>
                        <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=federates&filter=.federates{.name==="entity 1"} HTTP/1.1 ]]></artwork>
                        <preamble>Non-normative examples of a filter using boolean expressions and depth request: </preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "federates": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "entity entity",
      "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
      "federatedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "supports": []
    }
  ]
}
]]>
                        </artwork>
                    </t>
                </section>
            </section>
        </section>

        <section anchor="configuration-endpoint"
                 title="Configuration Endpoint">
            <t>
                This endpoint returns the JSON-LD for the RegistrationAuthority class,
                which includes information useful to clients prior to making requests.
                Registration Authority MUST make this JSON-LD class available at the
                path formed by concatenating the string
                <spanx style="verb">/.well-known/otto-configuration</spanx>
                to the Issuer. The syntax and semantics of
                <spanx style="verb">.well-known</spanx>
                are defined in<xref target="RFC5785"/>, and MUST point to a JSON
                document compliant with this specification and MUST be returned using
                the <spanx style="verb">application/json</spanx> content type.
            </t>

            <section anchor="configuration-example"
                     title="Configuration example">
                <figure>
                    <preamble>Non-normative example of a configuration request:</preamble>
                    <artwork><![CDATA[GET /otto/.well-known/otto-configuration HTTP/1.1
Host: ra.org]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a configuration response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
   "@context": "https://docs.kantarainitiative.org/otto/vocab-1.0",
   "@id": "https://ra.acme.ex/otto/.well-known/otto-configuration",
   "name": "Acme Registration Authority",
   "url": "https://www.acme.ex",
   "description": "Registration Authority for the ACME federations",
   "federation_endpoint":"https://ra.acme.ex/otto/federation",
   "participant_endpoint":"https://ra.acme.ex/otto/participant",
   "entity_endpoint":"https://ra.acme.ex/otto/entity",
   "registers": ["https://rs.acme.ex/otto/federation/28e780f4-eedf",
                 "https://ra.acme.ex/otto/federation/348159fd-8441"]
}
]]>
                    </artwork>
                </figure>

            </section>

        </section>

        <section anchor="federation-endpoint"
                 title="Federation Endpoint">
            <t>
                This endpoint, hosted by the Registration Authority, enables the
                creation and management of Federations.
            </t>

            <section anchor="create-federation"
                     title="Create Federation">
                <t>
                    This is POST API endpoint to create the federation. It needs to pass the required parameter to add the new federation. If you try to add federation with the same name which already exists then it returns response with error key with the message is "Federation already exist with the same name".
                </t>
                <figure>
                    <preamble>
                        There are several properties which used for federation.
                        <t>
                            <texttable anchor="table_federation" title="Federation">
                                <ttcol align='left'>Property</ttcol>
                                <ttcol align='left'>Value</ttcol>
                                <ttcol align='left'>Description</ttcol>
                                <!-- -->
                                <c><spanx style="strong">name</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>A human friendly name for the Federation</c>
                                <!-- -->
                                <c>description</c>
                                <c>OPTIONAL</c>
                                <c>It is Optional information about the RA</c>          <!-- -->
                                <!-- -->
                                <c>url</c>
                                <c>OPTIONAL</c>
                                <c>The public, human readable website for the Federation</c>
                                <!-- -->
                                <c>operates</c>
                                <c>OPTIONAL</c>
                                <c>It is the Entity or array of Entity. A service operated by the Federation</c>
                                <!-- -->
                                <c>metadata</c>
                                <c>OPTIONAL</c>
                                <c>It is the Metadata or array of Metadata. The metadata (including public signing key) for this Federation</c>
                                <!-- -->
                                <c>supports</c>
                                <c>OPTIONAL</c>
                                <c>It is the Schema or array of Schema. It describes what schema is supported by this Federation.</c>
                                <!-- -->
                                <c><spanx style="strong">registeredBy</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>The Registration Authority where the federation is hosted</c>
                                <!-- -->
                                <c>member</c>
                                <c>OPTIONAL</c>
                                <c>It is the array of Participants. List of organizational members of the Federation</c>
                                <!-- -->
                                <c>federates</c>
                                <c>OPTIONAL</c>
                                <c>It is the array of Entity. List of services registered to the federation by Participants</c>
                                <!-- -->
                                <c><spanx style="strong">sponsor</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>It is an Organization or array of Organization. The organization legally responsible for management of the
                                    Federation</c>
                                <!-- -->
                                <c>technicalContact</c>
                                <c>OPTIONAL</c>
                                <c>It is the Person or array of Person. Person(s) responsible for registering and maintaining the policies
                                    and technical data related to the organization's participation in
                                    the Federation</c>
                                <!-- -->
                                <c>executiveContact</c>
                                <c>OPTIONAL</c>
                                <c>It is the Person or array of Person. Person(s) responsible for all decisions and delegations of authority
                                    for the Federation</c>
                                <!-- -->
                                <c>securityContact</c>
                                <c>OPTIONAL</c>
                                <c>Person(s) to contact in the event of an urgent security issue</c>
                                <!-- -->
                                <c>dataProtectionCodeOfConduct</c>
                                <c>OPTIONAL</c>
                                <c>It is the URL. The provisions regarding handling of personal information by the
                                    Federation Participants</c>
                                <!-- -->
                                <c>federationAgreement</c>
                                <c>OPTIONAL</c>
                                <c>It is the URL. The rights and responsibilities of the Participant</c>
                                <!-- -->
                                <c>federationPolicy</c>
                                <c>OPTIONAL</c>
                                <c>It is the URL. Operational practices and technical details for participation
                                    in the Federation.</c>
                                <!-- -->
                                <c>trustMarkDefinitionSupported</c>
                                <c>OPTIONAL</c>
                                <c>It is the instance or array of TrustMarkDefinition or URL. What kinds of Trustmarks are supported by the federation</c>
                                <!-- -->
                                <c>badgeSupported</c>
                                <c>OPTIONAL</c>
                                <c>It is the instance or array of BadgeClass or IRI. What kinds of Badges are supported by the federation</c>
                            </texttable>
                        </t>
                    </preamble>
                    <preamble>Non-normative example of add a federation request</preamble>
                    <artwork><![CDATA[POST /otto/federations HTTP/1.1
{
	"name": "fed1",
	"url": "http://otto-test.gluu.org/otto/federation",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"sponsor": "58f720c7a10d8e1012e76ed4",
	"description": "fedearation fedearation",
	"securityContact": [{"name":"Security Person1", "contactNo":"+485647556566"}],
	"executiveContact": [{"name":"Executive Person1", "contactNo":"+485647556566"}],
	"technicalContact": [{"name":"Technical Person1", "contactNo":"+485647556566"}],
	"dataProtectionCodeOfConduct": "https://fd.org",
	"federationAgreement": "https://fd.org",
	"federationPolicy": "https://fd.org"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add a federation response:</preamble>
                    <preamble>In response it return with "@id" key, This is Unique IRI for the newly added Federation: </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/federations/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="search-federation"
                     title="Search Federation">
                <t>
                    This is GET API endpoint to fetch federation information. There are several ways to fetch federation information. you can fetch all the records, fetch all records with depth, fetch specific federation and also filtered using JSPath filter parameter.
                </t>

                <figure>
                    <preamble>Non-normative example of a federation request to fetch all federation list:</preamble>
                    <artwork><![CDATA[GET /otto/federations HTTP/1.1 ]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with json array: </preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="federations">
                                List of federation
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "federations": [
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3d"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request to fetch deep information of each federation:</preamble>
                    <artwork><![CDATA[GET /otto/federations?depth=federations HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with fetch deep information, for federation response description see the <xref target="create-federation"/></preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "federations": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed1",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "fedearation first",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
      ],
      "federates": [
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ],
      "member": [
        "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ],
      "metadata": [
        "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      ]
    },
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed2",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "fedearation Second",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
      ],
      "federates": [
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ],
      "member": [
        "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ],
      "metadata": [
        "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      ]
    }
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request by passing the unique id to fetch specific full response of specific federation. When federation not exists, it returns response "Federation doesn't exist": </preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response of specific federation, for response description see the <xref target="create-federation"/>.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
  "url": "http://otto-test.gluu.org/otto/federation",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "fedearation fedearation",
  "dataProtectionCodeOfConduct": "https://fd.org",
  "federationAgreement": "https://fd.org",
  "federationPolicy": "https://fd.org",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "sponsor": [
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
  ],
  "federates": [
    "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
  ],
  "member": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
  ],
  "trustMarkDefinitionSupported": [
    "https://fd.org"
  ],
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ],
  "metadata": [
    "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request ot fetch depth of specific federation. for depth parameter description refer <xref target="search-syntax" />: </preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=federates HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with deep populate of specific federation, for response description see the <xref target="create-federation"/>: </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
  "url": "http://otto-test.gluu.org/otto/federation",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "fedearation fedearation",
  "dataProtectionCodeOfConduct": "https://fd.org",
  "federationAgreement": "https://fd.org",
  "federationPolicy": "https://fd.org",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "sponsor": [
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
  ],
  "federates": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": {
        "@id": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df"
      },
      "description": "entity entity",
      "metadata": {
        "@id": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      },
      "federatedBy": [
        {
          "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
        }
      ],
      "supports": [
        {
          "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
        }
      ]
    }
  ],
  "member": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
  ],
  "trustMarkDefinitionSupported": [
    "https://fd.org"
  ],
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ],
  "metadata": [
    "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
  ]
}

]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request with multiple depth parameter: </preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=sponsor,federates HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response of multiple depth parameter, for response description of federation see the <xref target="create-federation"/>. It populate the sponsor and federates of this federation.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
  "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
  "name": "fed1",
  "url": "http://otto-test.gluu.org/otto/federation",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "fedearation fedearation",
  "dataProtectionCodeOfConduct": "https://fd.org",
  "federationAgreement": "https://fd.org",
  "federationPolicy": "https://fd.org",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "sponsor": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
      "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
      "name": "participant 1",
      "url": "http://otto-test.gluu.org/otto/participant",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "participant participant",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "memberOf": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "operates": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "trustMarkAsserted": "http://pa.org"
    }
  ],
  "federates": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "entity entity",
      "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
      "federatedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ]
    }
  ],
  "member": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
  ],
  "trustMarkDefinitionSupported": [
    "https://fd.org"
  ],
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ],
  "metadata": [
    "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request when invalid depth parameter is passed, It response with "Invalid depth parameter"</preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?depth=description HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "error": [
    "Invalid depth parameter"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request using filter parameter</preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?filter=.securityContact HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with filter parameter. It will filter json object as per given JSPath. JSPath is always start from dot(.)</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request using multiple filter parameter:</preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?filter=.securityContact,.name HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with multiple depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "name": [
    "fed1"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request using filter condition parameter:</preamble>
                    <artwork><![CDATA[GET /otto/federations/58f7200bcf5e0a0f09cf2c3c?filter=.member{.name==="participant 2"} HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response with filter condition parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "member": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
      "@id": "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4",
      "name": "participant 2",
      "url": "http://otto-test.gluu.org/otto/participant",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "participant participant",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "memberOf": [],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "operates": ""
    }
  ]
}

]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation request using page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="pageno">
                                The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
                            </t>

                            <t hangText="pagelength">
                                Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[GET /otto/federations?pageno=1&pagelength=5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response of page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="federations">
                                Contain list of federation array
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "federations": [
    "http://otto-test.gluu.org/otto/federations/59157847d1285b2273ef83d2",
    "http://otto-test.gluu.org/otto/federations/5915784bd1285b2273ef83d3",
    "http://otto-test.gluu.org/otto/federations/59157850d1285b2273ef83d4",
    "http://otto-test.gluu.org/otto/federations/59157854d1285b2273ef83d5",
    "http://otto-test.gluu.org/otto/federations/59157857d1285b2273ef83d6"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

            </section>

            <section anchor="update-federation"
                     title="Update Federation">
                <t>
                    This is PUT API endpoint to update federation. you need to pass the value of the field which you want to update. It will update only those field which you passed into parameter. The possible parameter you can passed for update, refer <xref target="create-federation"/>:
                </t>
                <figure>
                    <preamble>Non-normative example of update a federation request: </preamble>
                    <artwork><![CDATA[PUT /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
	"name": "fed1",
	"url": "http://otto-test.gluu.org/otto/federation",
	"description": "fedearation fedearation",
	"securityContact": [{"name":"Security Person1", "contactNo":"+485647556566"}],
	"executiveContact": [{"name":"Executive Person1", "contactNo":"+485647556566"}],
	"technicalContact": [{"name":"Technical Person1", "contactNo":"+485647556566"}],
	"dataProtectionCodeOfConduct": "https://fd.org",
	"federationAgreement": "https://fd.org",
	"federationPolicy": "https://fd.org"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of update a Federation response. It returns response with status 200 when successfully updated the federation.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>
            </section>
                        
            <section anchor="patch-federation"
                     title="Patch Federation">
                <t>
                    HTTP PATCH is an OPTIONAL server function that enables clients to
                    update one or more attributes of a federation resource using a sequence of
                    operations to "add", "remove", or "replace" values.
                </t>
                <t>
                    The body of an HTTP PATCH request MUST contain the attribute
                    "op", whose value is an array of one or more PATCH
                    operations.  Each PATCH operation object MUST have exactly one "op"
                    member, whose value indicates the operation to perform and MAY be one
                    of "add", "remove", or "replace".
                </t>

                <figure>
                    <preamble>The following non-normative example show how to add a executive contact in federation request: </preamble>
                    <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
"op": "add",
"path": "executiveContact",
"value": {
      "contactNo": "+485647556566",
      "name": "Executive Person2"
  }
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add patch operation Federation response.  On successful completion, the server either MUST return a 200 OK response code.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>

                <t>
                    The "path" attribute value is a String containing an attribute path
                    describing the target of the operation.  The "path" attribute is
                    OPTIONAL for "add" and "replace" and is REQUIRED for "remove"
                    operations.
                </t>

                <t>
                    Valid examples of "path" are as follows:
                </t>

                <list style="numbers">
                    <t>"path": "federates"</t>
                    <t>"path":"securityContact.name"</t>
                    <t>"path": "securityContact[name eq \"Person1\"]"</t>
                    <t>"path": "securityContact[name eq \"Person1\"].name"</t>
                    <t>"path":"/federates/59414908e7748f4d19541f46" -> Allow only for remove patch operation</t>
                </list>

                <section anchor="add-patch-federation"
                         title="Add Operation">
                    <t>
                        The "add" operation is used to add a new attribute value to an
                        existing resource.
                    </t>

                    <t>
                        The operation MUST contain a "value" member whose content specifies
                        the value to be added.  The value MAY be a quoted value, or it may be
                        a JSON object containing the sub-attributes of the complex attribute
                        specified in the operation's "path".
                    </t>

                    <t>
                        The result of the add operation depends upon what the target location
                        indicated by "path" references:
                    </t>

                    <list style="symbols">
                        <t>
                            If omitted, the target location is assumed to be the resource
                            itself.  The "value" parameter contains a set of attributes to be
                            added to the resource.
                        </t>

                        <t>
                            If the target location specifies a multi-valued attribute, a new
                            value is added to the attribute.
                        </t>

                        <t>
                            If the target location specifies a single-valued attribute, the
                            existing value is replaced.
                        </t>

                        <t>
                            If the target location specifies a complex attribute, a set of
                            sub-attributes SHALL be specified in the "value" parameter.
                        </t>
                    </list>

                    <t>
                        Below is the non-normative example of possible patch request.
                    </t>
                    <figure>
                        <preamble>The following non-normative example shows how to add entity as a federates in federation: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"path":"federates",
"value":["593e389eef45281765f96128"]
}
]]>
                        </artwork>

                        <preamble>Non-normative example of add patch operation without path property to federation request: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"value":{
 "federates": ["593e389eef45281765f96128"]
 }
}
]]>
                        </artwork>

                        <preamble>Non-normative example of patch operation to passed single value in multivalued attribute: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"value":{
 "federates": "593e389eef45281765f96128"
 }
}
]]>
                        </artwork>

                        <preamble>Non-normative example of patch to single valued attribute: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "add",
 "path": "name",
 "value": "fed-test"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of patch with path parameter condition. Currently It only allow equels(eq) operation: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "add",
 "path": "securityContact[name eq \"sec12\"]",
 "value": {
      "contactNo": "+485647556566",
      "name": "sec1"
    }
}
]]>
                        </artwork>

                        <preamble>Non-normative example of patch to sub attribute: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "add",
 "path": "securityContact[name eq \"Person1\"].name",
 "value":"Person One"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of patch to multiple attribute: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "add",
 "value": {
  "name":"fed-name",
  "description": "fed-desc"
 }
}
]]>
                        </artwork>

                    </figure>
                </section>

                <section anchor="replace-patch-federation"
                         title="Replace Operation">
                    <t>
                        The "replace" operation replaces the value at the target location
                        specified by the "path".  The operation performs the following
                        functions, depending on the target location specified by "path":
                    </t>

                    <list style="symbols">
                        <t>
                            If the "path" parameter is omitted, the target is assumed to be
                            the resource itself.  In this case, the "value" attribute SHALL
                            contain a list of one or more attributes that are to be replaced.
                        </t>

                        <t>
                            If the target location is a multi-valued attribute, the attribute and all values are replaced.
                        </t>

                        <t>
                            If the target location is a single-value attribute, the attributes
                            value is replaced.
                        </t>

                        <t>
                            If the target location specifies a complex attribute, a set of
                            sub-attributes SHALL be specified in the "value" parameter, which
                            replaces any existing values or adds where an attribute did not
                            previously exist.  Sub-attributes that are not specified in the
                            "value" parameter are left unchanged.
                        </t>

                        <t>
                            If the target location is a multi-valued attribute and a value
                            selection filter is specified that matches one or
                            more values of the multi-valued attribute, then all matching
                            record values SHALL be replaced.
                        </t>

                        <t>
                            If the target location is a complex multi-valued attribute with a
                            value selection filter ("valuePath") and a specific sub-attribute
                            (e.g., "securityContact[name eq "abc"].contactNo"), the matching
                            sub-attribute of all matching records is replaced.
                        </t>

                    </list>

                    <t>Replace patch also support all the possibilities as describe in <xref target="add-patch-federation"/> </t>

                    <figure>
                        <preamble>Non-normative example of replace patch operation federation request. It remove previous federates and adde new federates: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "replace",
 "path": "federates",
 "value": ["593e389eef45281765f96128"]
}
]]>
                        </artwork>

                        <preamble>Non-normative example of add patch operation without path property federation request: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"replace",
"value":{
 "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person2"
    }
  ]
 }
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of replace patch operation Federation response. It returns response with status 200 when successfully patch the federation.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                </section>

                <section anchor="remove-patch-federation"
                         title="Remove Operation">
                    <t>
                        The "remove" operation removes the value at the target location
                        specified by the required attribute "path".  The operation performs
                        the following functions, depending on the target location specified
                        by "path":
                    </t>

                    <list style="symbols">
                        <t>
                            If the target location is a single-value attribute, the attribute
                            and its associated value is removed, and the attribute SHALL be
                            considered unassigned null.
                        </t>

                        <t>
                            If the target location is a multi-valued attribute, the attribute and all values are removed, and the
                            attribute SHALL be considered null array.
                        </t>

                        <t>
                            If the target location is a multi-valued attribute and a complex
                            filter is specified comparing a "value", the values matched by the
                            filter are removed.  If no other values remain after removal of
                            the selected values, the multi-valued attribute SHALL be
                            considered null.
                        </t>

                        <t>
                            If the target location is a complex multi-valued attribute and a
                            complex filter is specified based on the attribute's
                            sub-attributes, the matching records are removed.  Sub-attributes
                            whose values have been removed SHALL be considered unassigned.  If
                            the complex multi-valued attribute has no remaining records, the
                            attribute SHALL be considered unassigned.
                        </t>
                    </list>

                    <figure>
                        <preamble>Non-normative example of remove patch operation federation request to remove specific federates from federation: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op":"remove",
 "path":"/federates/59414908e7748f4d19541f46"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of remove patch operation federation request to removed multivalued attribute all values. It will remove all executiveContact: </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "remove",
 "path": "executiveContact"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of remove patch operation federation request with path parameter condition. It will remove executiveContact whose name is "sec2": </preamble>
                        <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
{
 "op":"remove",
 "path":"securityContact[name eq \"sec2\"]"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of remove patch operation Federation response. It returns response with status 200 when successfully patch the federation.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>
                </section>

                <figure>
                    <t>
                        The following example shows how to passed multiple operation in patch.
                    </t>
                    <preamble>Non-normative example of multiple patch operation federation request: </preamble>
                    <artwork><![CDATA[PATCH /otto/federations/5909b4218489131c19abfa29 HTTP/1.1
[
 {
  "op": "remove",
  "path": "executiveContact"
 },
 {
  "op": "replace",
  "path": "name",
  "value": "abc"
 }
]
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of multiple patch operation Federation response. It returns response with status 200 when successfully patch the federation.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>

            </section>

            <section anchor="delete-federation"
                     title="Delete Federation">
                <t>
                    This is DELETE API endpoint to delete federation. It needs to passed unique id of the federation in the federation endpoint.
                </t>
                <figure>
                    <preamble>Non-normative example of delete a federation request:</preamble>
                    <artwork><![CDATA[DELETE /otto/federations/5909b4218489131c19abfa29 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of delete a federation success response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of deleting a federation error response when federation not found: </preamble>
                    <artwork><![CDATA[HTTP/1.1 404 OK
{
  "error": [
    "Federation doesn't exist"
  ]
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="leave-federation"
                     title="Leave Federation">
                <t>
                    This is DELETE API for remove services of this federation. It removes entity reference from the federates of the Federation.
                </t>
                <t>
                    Their are two path request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation Id">
                            first path parameter is federation unique id.
                        </t>

                        <t hangText="Entity Id">
                            Second path parameter is entity unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a federation leave request: </preamble>
                    <artwork><![CDATA[DELETE /otto/federations/5909b4218489131c19abfa29/entity/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation leave success response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation leave fail response when federation not found:</preamble>
                    <artwork><![CDATA[HTTP/1.1 404 OK
{
  "error": [
    "Federation doesn't exist"
  ]
}
]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation leave fail response when entity doesn't exist in federates:</preamble>
                    <artwork><![CDATA[HTTP/1.1 404 OK
{
  "error": [
    "Entity doesn't exist in Federation"
  ]
}
]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation leave fail response when passed any invalid id:</preamble>
                    <artwork><![CDATA[HTTP/1.1 404 OK
{
  "error": [
    "Invalid Federation Id"
  ]
}
]]></artwork>
                </figure>
            </section>

            <section anchor="link-federation-entity"
                     title="Link entity to federation">
                <t>
                    This is POST API endpoint for add services to this federation. It adds entity reference to federates of the Federation.
                </t>
                <t>
                    Their are two path request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation Id">
                            The first path parameter is federation unique id.
                        </t>

                        <t hangText="Entity Id">
                            The second path parameter is entity unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a federation link to entity request: </preamble>
                    <artwork><![CDATA[POST/otto/federations/5909b4218489131c19abfa29/entity/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation link to entity response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <t> It return response as per like <xref target="leave-federation"/> </t>
            </section>

            <section anchor="add-new-service"
                     title="Add new service to federation">
                <t>
                    This is POST API endpoint for add a new service into the federation. It will add new service(entity) to the federation and linked this newly added service(entity) to the Federation.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation Id">
                            The first path parameter is federation unique id.
                        </t>

                        <t hangText="Entity">
                            This is full requested body of entity. for possible parameter refer <xref target="create-entity"/>
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a federation request to add new service:</preamble>
                    <artwork><![CDATA[POST /otto/federation/5909b4218489131c19abfa29 HTTP/1.1
{
	"name": "entity 1",
	"url": "http://otto-test.gluu.org/otto/entity",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"description": "entity entity",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"metadata": "58f5da4957d53d2ffbbb31e0"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response from add new service:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/federations/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="link-participant-member-federation"
                     title="Link participant(member) to federation">
                <t>
                    This is POST API endpoint for link participant as a member of the Federation. It adds participant reference to the member of the Federation.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation Id">
                            The first path parameter is federation unique id.
                        </t>

                        <t hangText="Participant Id">
                            The second path parameter is participant unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a link participant to federation request:</preamble>
                    <artwork><![CDATA[POST /otto/federations/5909b4218489131c19abfa29/participant/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a link participant to federation federation response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <t> It return response as per like <xref target="leave-federation"/> </t>
            </section>

            <section anchor="link-participant-sponsor-federation"
                     title="Link participant(sponsor) to federation">
                <t>
                    This is POST API endpoint for link participant as a sponsor of the Federation. It adds the participant reference to the sponsor of the Federation.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Federation Id">
                            The first path parameter is federation unique id.
                        </t>

                        <t hangText="Participant Id">
                            The second path parameter is participant unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a link participant as a sponsor of federation request:</preamble>
                    <artwork><![CDATA[POST /otto/federations/5909b4218489131c19abfa29/sponsor/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a link participant as a sponsor of federation response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <t>It return response as per like <xref target="leave-federation"/> </t>
            </section>

        </section>

        <section anchor="participant-endpoint"
                 title="Participant Endpoint">
            <t>
                This endpoint, hosted by the Registration Authority, enables
                the registration and management of information about an organization
                so it can be associated with a Federation.
            </t>

            <section anchor="create-participant"
                     title="Create Participant">
                <t>
                    This is POST API endpoint to create participant. It needs to pass the required parameter to add the new participant. If you try to add participant with the same name which already exists then it returns response with error key with the message is "Participant already exist with the same name".
                </t>
                <figure>
                    <preamble>
                        Their are several properties which used for participant.
                        <t>
                            <texttable anchor="table_participant" title="Participant">
                                <ttcol align='left'>Property</ttcol>
                                <ttcol align='left'>Value</ttcol>
                                <ttcol align='left'>Description</ttcol>
                                <!-- -->
                                <c><spanx style="strong">name</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>A human friendly name for the Participant</c>
                                <!-- -->
                                <c>url</c>
                                <c>OPTIONAL</c>
                                <c>The public website for the Participant</c>
                                <!-- -->
                                <c>description</c>
                                <c>OPTIONAL</c>
                                <c>It is Optional information about the Participant</c>
                                <!-- -->
                                <c>memberOf</c>
                                <c>OPTIONAL</c>
                                <c>It is the Federation or array of Federation, A federation to which this Participant is a member</c>
                                <!-- -->
                                <c>operates</c>
                                <c>OPTIONAL</c>
                                <c>It is the entity, A service operated by the Participant</c>
                                <!-- -->
                                <c><spanx style="strong">registeredBy</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>It is the registration authority, where the Participant is registered</c>
                                <!-- -->
                                <c>technicalContact</c>
                                <c>OPTIONAL</c>
                                <c>It is the Person or array of Person, Person(s) responsible for registering and maintaining the policies
                                    and technical data related to the Federation</c>
                                <!-- -->
                                <c>executiveContact</c>
                                <c>OPTIONAL</c>
                                <c>It is the Person or array of Person, Person responsible for all decisions and delegations of authority
                                    for the Participant</c>
                                <!-- -->
                                <c>securityContact</c>
                                <c>OPTIONAL</c>
                                <c>It is the Person or array of Person, Person(s) to contact in the event of an urgent security issue</c>
                                <!-- -->
                                <c>trustMarkAsserted</c>
                                <c>OPTIONAL</c>
                                <c>It is the instance or array of Trustmark or URL, Link to TrustMarks the Participant claims</c>
                                <!-- -->
                                <c>badgeSupported</c>
                                <c>OPTIONAL</c>
                                <c>It is the instance or array of BadgeClass or IRI, What Badges the Participant issues</c>
                            </texttable>
                        </t>
                    </preamble>
                    <preamble>Non-normative example of add a participant request</preamble>
                    <artwork><![CDATA[POST /otto/entity HTTP/1.1
{
	"name": "participant1",
	"url": "http://otto-test.gluu.org/otto/participant",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"description": "participant participant",
	"securityContact": [{"name":"Security Person1", "contactNo":"+485647556566"}],
	"executiveContact": [{"name":"Executive Person1", "contactNo":"+485647556566"}],
	"technicalContact": [{"name":"Technical Person1", "contactNo":"+485647556566"}]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add a participant response:</preamble>
                    <preamble>In response it return with "@id" key, This is Unique IRI for the newly added participant</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/participant/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="fetch-participant"
                     title="Fetch Participant">
                <figure>
                    <preamble>Non-normative example of a get all participant request:</preamble>
                    <artwork><![CDATA[GET /otto/participant HTTP/1.1 ]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a get all participant response:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="participant">
                                List of participant
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "participant": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request with depth parameter:</preamble>
                    <artwork><![CDATA[GET /otto/participant?depth=participant HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from depth parameter. for participant response description see the <xref target="create-participant"/></preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "participant": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
      "@id": "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4",
      "name": "participant 2",
      "url": "http://otto-test.gluu.org/otto/participant",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "participant participant",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "memberOf": [],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "operates": ""
    },
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
      "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
      "name": "participant 1",
      "url": "http://otto-test.gluu.org/otto/participant",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "participant participant",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "memberOf": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "operates": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "trustMarkAsserted": "http://pa.org"
    }
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a fetch specific participant information by passing participant unique id:</preamble>
                    <artwork><![CDATA[GET /otto/participant/58f720e1a10d8e1012e76ed5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from specific participant. for participant response description see the <xref target="create-participant"/></preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
  "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
  "name": "participant 1",
  "url": "http://otto-test.gluu.org/otto/participant",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "participant participant",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "memberOf": [
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
  ],
  "operates": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "trustMarkAsserted": "http://pa.org"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request with specified id and depth parameter:</preamble>
                    <artwork><![CDATA[GET /otto/participant/58f720e1a10d8e1012e76ed5?depth=memberOf HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from with specified id and depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
  "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
  "name": "participant 1",
  "url": "http://otto-test.gluu.org/otto/participant",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "participant participant",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "memberOf": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed1",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": {
        "@id": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df"
      },
      "description": "fedearation fedearation",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        {
          "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
        }
      ],
      "federates": [
        {
          "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
        }
      ],
      "member": [
        {
          "@id": "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
        }
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        {
          "@id": "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
        }
      ],
      "supports": [
        {
          "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
        }
      ],
      "metadata": [
        {
          "@id": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
        }
      ]
    }
  ],
  "operates": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "trustMarkAsserted": "http://pa.org"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request with multiple depth parameter:</preamble>
                    <artwork><![CDATA[GET /otto/participant/58f720e1a10d8e1012e76ed5?depth=memberOf,operates HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from multiple depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#participant",
  "@id": "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
  "name": "participant 1",
  "url": "http://otto-test.gluu.org/otto/participant",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "participant participant",
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ],
  "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person1"
    }
  ],
  "technicalContact": [
    {
      "contactNo": "+485647556566",
      "name": "Technical Person1"
    }
  ],
  "memberOf": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed1",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "fedearation fedearation",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
      ],
      "federates": [
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ],
      "member": [
        "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ],
      "metadata": [
        "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      ]
    }
  ],
  "operates": {
    "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
    "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
    "name": "entity 1",
    "url": "http://otto-test.gluu.org/otto/entity",
    "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
    "description": "entity entity",
    "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
    "federatedBy": [
      "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
    ],
    "supports": []
  },
  "badgeSupported": [
    "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
  ],
  "trustMarkAsserted": "http://pa.org"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request with filter parameter:</preamble>
                    <artwork><![CDATA[GET /otto/participant/58f7200bcf5e0a0f09cf2c3c?filter=.name HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "participant 1"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request with multiple filter parameter:</preamble>
                    <artwork><![CDATA[GET /otto/participant/58f720e1a10d8e1012e76ed5?filter=.name,.securityContact HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response from multiple filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "participant 1"
  ],
  "securityContact": [
    {
      "contactNo": "+485647556566",
      "name": "Security Person1"
    }
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant request using page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="pageno">
                                The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
                            </t>

                            <t hangText="pagelength">
                                Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[GET /otto/participant?pageno=1&pagelength=5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response of page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="participant">
                                The list of participant array
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "participant": [
    "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5",
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed6",
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed7",
    "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed8"
  ],
  "totalResults": 11,
  "itemsPerPage": 5,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="update-participant"
                     title="Update Participant">
                <t>
                    This is PUT API endpoint to update the Participant. It needs to pass the value of the field which you want to update. It will update only those field which you passed into the parameter. The possible parameter you can passed for update, refer <xref target="create-participant"/>.
                </t>
                <figure>
                    <preamble>Non-normative example of a update participant request:</preamble>
                    <artwork><![CDATA[PUT /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
	"name": "participant1",
	"url": "http://otto-test.gluu.org/otto/participant",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"description": "participant participant",
	"securityContact": [{"name":"Security Person1", "contactNo":"+485647556566"}],
	"executiveContact": [{"name":"Executive Person1", "contactNo":"+485647556566"}],
	"technicalContact": [{"name":"Technical Person1", "contactNo":"+485647556566"}]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a update participant response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="patch-participant"
                     title="Patch participant">
                <t>
                    HTTP PATCH is an OPTIONAL server function that enables clients to
                    update one or more attributes of a participant resource using a sequence of
                    operations to "add", "remove", or "replace" values.
                </t>
                <t>
                    The body of an HTTP PATCH request MUST contain the attribute
                    "op", whose value is an array of one or more PATCH
                    operations.  Each PATCH operation object MUST have exactly one "op"
                    member, whose value indicates the operation to perform and MAY be one
                    of "add", "remove", or "replace".
                </t>

                <t>
                    The "path" attribute value is a String containing an attribute path
                    describing the target of the operation.  The "path" attribute is
                    OPTIONAL for "add" and "replace" and is REQUIRED for "remove"
                    operations.
                </t>

                <section anchor="add-patch-participant"
                         title="Add Operation">
                    <t>
                        The "add" operation is used to add a new attribute value to an
                        existing resource. refer <xref target="add-patch-federation" /> for add patch operation description.
                    </t>

                    <figure>
                        <preamble>The following example show how to link participant with federation: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"path":"memberOf",
"value":["5909b4218489131c19abfa29"]
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation participant response. It returns response with status 200 when successfully patch the participant.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property to participant request: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"value":{
 "memberOf": ["5909b4218489131c19abfa29"]
 }
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property to participant response. It returns response with status 200 when successfully patch the federation.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>
                </section>

                <section anchor="replace-patch-participant"
                         title="Replace Operation">
                    <t>
                        The "replace" operation replaces the value at the target location
                        specified by the "path". refer <xref target="replace-patch-federation" /> for detail replace patch description.
                    </t>

                    <figure>
                        <preamble>Non-normative example of replace patch operation participant request: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
"op": "replace",
"path": "executiveContact",
"value": [{
      "contactNo": "+485647556566",
      "name": "Executive Person2"
  }]
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of replace patch operation participant response. It returns response with status 200 when successfully patch the participant.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property participant request: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"replace",
"value":{
 "executiveContact": [
    {
      "contactNo": "+485647556566",
      "name": "Executive Person2"
    }
  ]
 }
}
]]></artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of replace patch operation without path property participant response. It returns response with status 200 when successfully patch the participant.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>
                </section>

                <section anchor="remove-patch-participant"
                         title="Remove Operation">
                    <t>
                        The "remove" operation removes the value at the target location
                        specified by the required attribute "path". Refer <xref target="remove-patch-federation" /> for detail description of remove patch.
                    </t>

                    <figure>
                        <preamble>Non-normative example of remove patch operation participant request to remove specific federation: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
 "op":"remove",
 "path":"/memberOf/59414908e7748f4d19541f46"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of remove patch operation participant request: </preamble>
                        <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
{
 "op": "remove",
 "path": "executiveContact"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of remove patch operation participant response. It returns response with status 200 when successfully patch the participant.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                </section>

                <figure>
                    <t>
                        The following example shows how to passed multiple operation in patch.
                    </t>
                    <preamble>Non-normative example of multiple patch operation participant request: </preamble>
                    <artwork><![CDATA[PATCH /otto/participant/5909b4218489131c19abfa29 HTTP/1.1
[
 {
  "op": "remove",
  "path": "executiveContact"
 },
 {
  "op": "replace",
  "path": "name",
  "value": "abc"
 }
]
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of multiple patch operation participant response. It returns response with status 200 when successfully patch the participant.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>

            </section>

            <section anchor="delete-participant"
                     title="Delete Participant">
                <figure>
                    <preamble>Non-normative example of a delete participant request</preamble>
                    <artwork><![CDATA[DELETE /otto/participant/5909b4218489131c19abfa29 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a delete participant response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="link-participant-memberOf-federation"
                     title="Link participant(member) of federation">
                <t>
                    This is POST API endpoint for link participant as a member of Federation. It added the federation reference to memberOf in the participant.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Participant Id">
                            The first path parameter is participant unique id.
                        </t>

                        <t hangText="Federation Id">
                            The second path parameter is federation unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a participant request</preamble>
                    <artwork><![CDATA[POST /otto/participant/5909b4218489131c19abfa29/federation/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a participant response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>

                <t> It return response as per like <xref target="leave-federation"/> </t>
            </section>

            <section anchor="link-entity-service-participant"
                     title="Link entity(service) to participant">
                <t>
                    This is POST API endpoint for link entity as a service of the Participant. It is a service operated by the Participant.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Participant Id">
                            The first path parameter is participant unique id.
                        </t>

                        <t hangText="Entity Id">
                            The second path parameter is entity unique id.
                        </t>
                    </list>
                </t>
                <figure>
                    <preamble>Non-normative example of a link entity to participant request:</preamble>
                    <artwork><![CDATA[POST /otto/participant/5909b4218489131c19abfa29/entity/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a link entity to participant response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

        </section>

        <section anchor="entity-endpoint"
                 title="Entity Endpoint">
            <t>
                This endpoint, hosted by the Registration Authority, enables
                the registration and management of digital services at the federation.
            </t>

            <section anchor="create-entity"
                     title="Create Entity">
                <t>
                    This is POST API endpoint to create entity. It needs to pass the required parameter to add the new entity. If you try to add entity with same name which is already exist then it return response with error key with message is "entity already exist with same name".
                </t>
                <figure>
                    <preamble>
                        Their are several properties which used for entity.
                        <t>
                            <texttable anchor="table_entity" title="Entity">
                                <ttcol align='left'>Property</ttcol>
                                <ttcol align='left'>Value</ttcol>
                                <ttcol align='left'>Description</ttcol>
                                <!-- -->
                                <c><spanx style="strong">name</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>A human friendly name for the Entity</c>
                                <!-- -->
                                <c>operatedBy</c>
                                <c>OPTIONAL</c>
                                <c>It is the Federation or Participant, The organization that is responsible for this Entity</c>
                                <!-- -->
                                <c>url</c>
                                <c>OPTIONAL</c>
                                <c>The public, human readible website for the Entity</c>
                                <!-- -->
                                <c>description</c>
                                <c>OPTIONAL</c>
                                <c>It is Optional information about the Entity</c>
                                <!-- -->
                                <c><spanx style="strong">registeredBy</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>The RA which registered this entity</c>
                                <!-- -->
                                <c>federatedBy</c>
                                <c>OPTIONAL</c>
                                <c>It is the Federation or array of Federation, The federation to which this entity is affiliated</c>
                                <!-- -->
                                <c>metadata</c>
                                <c>OPTIONAL</c>
                                <c>The metadata for this Entity</c>
                                <!-- -->
                                <c>category</c>
                                <c>OPTIONAL</c>
                                <c>It is the category, Used for assignment of standard Category defined in extension</c>
                                <!-- -->
                                <c>supports</c>
                                <c>OPTIONAL</c>
                                <c>It is the Schema or array of Schema, What schema is supported by this Entity</c>
                            </texttable>

                        </t>
                    </preamble>
                    <preamble>Non-normative example of add a entity request</preamble>
                    <artwork><![CDATA[POST /otto/entity HTTP/1.1
{
	"name": "entity 1",
	"url": "http://otto-test.gluu.org/otto/entity",
	"registeredBy": "http://otto-test.gluu.org",
	"description": "entity entity",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"metadata": "58f5da4957d53d2ffbbb31e0",
	"category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add a entity response:</preamble>
                    <preamble>In response it return with "@id" key, It is Unique IRI for the newly added entity</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/entity/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="fetch-entity"
                     title="Fetch Entity">
                <figure>
                    <preamble>Non-normative example of a get all entity request</preamble>
                    <artwork><![CDATA[GET /otto/entity HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a get all entity response:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="entity">
                                List of entity
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "entity": [
    "http://otto-test.gluu.org/otto/entity/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/entity/58f720e1a10d8e1012e76ed5"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity with depth parameter request</preamble>
                    <artwork><![CDATA[GET /otto/entity?depth=entity HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response from depth parameter. for entity response description see the <xref target="create-entity"/></preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "@context": "http://otto-test.gluu.org/otto/entity",
  "entity": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
      "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
      "name": "entity 1",
      "url": "http://otto-test.gluu.org/otto/entity",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "entity entity",
      "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
      "federatedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ]
    }
  ],
  "totalResults": 1,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a fetch specific entity request by passing unique entity id: </preamble>
                    <artwork><![CDATA[GET /otto/entity/58f720e1a10d8e1012e76ed5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response from specified entity unique id. for entity response description see the <xref target="create-entity"/></preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
  "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
  "name": "entity 1",
  "url": "http://otto-test.gluu.org/otto/entity",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "entity entity",
  "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
  "federatedBy": [
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity request with specified entity and depth parameter: </preamble>
                    <artwork><![CDATA[GET /otto/entity/58f7218ca10d8e1012e76ed6?depth=registeredBy HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response from specified entity and depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
  "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
  "name": "entity 1",
  "url": "http://otto-test.gluu.org/otto/entity",
  "registeredBy": {
    "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#registration-authority",
    "@id": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
    "url": "http://otto-test.gluu.org",
    "description": "OTTO Registration Authority",
    "federation_endpoint": "http://otto-test.gluu.org/otto/federations",
    "participant_endpoint": "http://otto-test.gluu.org/otto/participant",
    "entity_endpoint": "http://otto-test.gluu.org/otto/entity",
    "name": "otto-test",
    "registers": []
  },
  "description": "entity entity",
  "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
  "federatedBy": [
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity request with multiple depth parameter: </preamble>
                    <artwork><![CDATA[GET /otto/entity/58f720e1a10d8e1012e76ed5?depth=depth=federatedBy,supports HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response from multiple depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#entity",
  "@id": "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6",
  "name": "entity 1",
  "url": "http://otto-test.gluu.org/otto/entity",
  "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
  "description": "entity entity",
  "metadata": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
  "federatedBy": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed1",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "fedearation fedearation",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
      ],
      "federates": [
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ],
      "member": [
        "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ],
      "metadata": [
        "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      ]
    }
  ],
  "supports": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#schema",
      "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956",
      "name": "given_name",
      "category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
      "required": false,
      "url": "https://en.wikipedia.org/wiki/Given_name",
      "sameAs": "https://schema.org/givenName,https://erasmus.gluu.org/schema/457c",
      "supportedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ]
    }
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity request with filter parameter:</preamble>
                    <artwork><![CDATA[GET /otto/entity/58f7218ca10d8e1012e76ed6?filter=.name HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response from filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "entity 1"
  ]
}
]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity request with multiple filter parameter: </preamble>
                    <artwork><![CDATA[GET /otto/entity/58f7218ca10d8e1012e76ed6?filter=.name,.supports HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response from multiple filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "entity 1"
  ],
  "supports": [
    "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity request using pageno and pagelength parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="pageno">
                                The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
                            </t>

                            <t hangText="pagelength">
                                Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[GET /otto/entity?pageno=1&pagelength=5 HTTP/1.1 ]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response of page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="entity">
                                Contain list of entity array
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "entity": [
    "http://otto-test.gluu.org/otto/entity/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/entity/58f720e1a10d8e1012e76ed5",
    "http://otto-test.gluu.org/otto/entity/58f720e1a10d8e1012e76ed6",
    "http://otto-test.gluu.org/otto/entity/58f720e1a10d8e1012e76ed7",
    "http://otto-test.gluu.org/otto/entity/58f720e1a10d8e1012e76ed8"
  ],
  "totalResults": 11,
  "itemsPerPage": 5,
  "startIndex": 1
}
]]></artwork>
                </figure>
            </section>

            <section anchor="update-entity"
                     title="Update entity">
                <t>
                    This is PUT API endpoint to update the entity. It needs to pass the value of the field which you want to update. It will update only those field which you passed into the parameter. The possible parameter you can passed for update, refer <xref target="create-entity"/>.
                </t>
                <figure>
                    <preamble>Non-normative example of a update entity request</preamble>
                    <artwork><![CDATA[PUT /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
	"name": "entity 1",
	"url": "http://otto-test.gluu.org/otto/entity",
	"registeredBy": "http://otto-test.gluu.org",
	"description": "entity entity",
	"registeredBy": "58f5da4957d53d2ffbbb31df",
	"metadata": "58f5da4957d53d2ffbbb31e0",
	"category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a update entity response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="patch-entity"
                     title="Patch Entity">
                <t>
                    HTTP PATCH is an OPTIONAL server function that enables clients to
                    update one or more attributes of a entity resource using a sequence of
                    operations to "add", "remove", or "replace" values.
                </t>
                <t>
                    The body of an HTTP PATCH request MUST contain the attribute
                    "op", whose value is an array of one or more PATCH
                    operations.  Each PATCH operation object MUST have exactly one "op"
                    member, whose value indicates the operation to perform and MAY be one
                    of "add", "remove", or "replace".
                </t>

                <figure>
                    <preamble>The following example show how to add link entity with federation:</preamble>
                    <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"path":"federatedBy",
"value":"5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>

                <t>
                    The "path" attribute value is a String containing an attribute path
                    describing the target of the operation.  The "path" attribute is
                    OPTIONAL for "add" and "replace" and is REQUIRED for "remove"
                    operations.
                </t>

                <section anchor="add-patch-entity"
                         title="Add Operation">
                    <t>
                        The "add" operation is used to add a new attribute value to an
                        existing resource. Refer <xref target="add-patch-federation" /> for detail description of patch add operation.
                    </t>

                    <figure>
                        <preamble>The following example show how to add link entity with federation:</preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"path":"federatedBy",
"value":"5909b4218489131c19abfa29"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property to entity request: </preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"add",
"value":{
  "federatedBy": "5909b4218489131c19abfa29"
 }
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property to entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>
                </section>

                <section anchor="replace-patch-entity"
                         title="Replace Operation">
                    <t>
                        The "replace" operation replaces the value at the target location
                        specified by the "path". Refer <xref target="replace-patch-federation" /> for detail description of replace patch.
                    </t>

                    <figure>
                        <preamble>The following example show how to replace operator of entity. It will replace old operator with new operator: </preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"replace",
"path": "operatedBy",
"value":"5909b4218489131c19abfa28"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of replace patch operation entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of add patch operation without path property entity request: </preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"replace",
"value":{
 "operatedBy": "5909b4218489131c19abfa28"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of replace patch operation without path property entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>
                </section>

                <section anchor="remove-patch-entity"
                         title="Remove Operation">
                    <t>
                        The "remove" operation removes the value at the target location
                        specified by the required attribute "path". Refer <xref target="remove-patch-federation" /> for detail description of remove patch operation.
                    </t>

                    <figure>
                        <preamble>Non-normative example of remove patch operation entity request to remove federation: </preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op":"remove",
"path":"/federatedBy/59414908e7748f4d19541f46"
}
]]>
                        </artwork>

                        <preamble>Non-normative example of remove patch operation entity request: </preamble>
                        <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
{
"op": "remove",
"path": "operatedBy"
}
]]>
                        </artwork>
                    </figure>

                    <figure>
                        <preamble>Non-normative example of remove patch operation entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                        <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                        </artwork>
                    </figure>

                </section>

                <figure>
                    <t>
                        The following non-normative example shows how to passed multiple operation in patch.
                    </t>
                    <preamble>Non-normative example of multiple patch operation entity request: </preamble>
                    <artwork><![CDATA[PATCH /otto/entity/5909b4218489131c19abfa29 HTTP/1.1
[
 {
  "op": "remove",
  "path": "operatedBy"
 },
 {
  "op": "replace",
  "path": "name",
  "value": "abc"
 }
]
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of multiple patch operation entity response. It returns response with status 200 when successfully patch the entity.</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]>
                    </artwork>
                </figure>

            </section>

            <section anchor="delete-entity"
                     title="Delete Entity">
                <t>
                    This is DELETE API to delete entity. It needs to pass the entity unique id for delete specific entity.
                </t>
                <figure>
                    <preamble>Non-normative example of a entity request</preamble>
                    <artwork><![CDATA[DELETE /otto/entity/5909b4218489131c19abfa29 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a entity response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="link-entity-federation"
                     title="Link entity with federation">
                <t>
                    This is POST API for link entity to the federation. The federation to which this entity is affiliated.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Entity Id">
                            first path parameter is entity unique id.
                        </t>

                        <t hangText="Federation Id">
                            Second path parameter is Federation unique id.
                        </t>
                    </list>
                </t>

                <figure>
                    <preamble>Non-normative example of a link entity with federation request: </preamble>
                    <artwork><![CDATA[POST /otto/entity/5909b4218489131c19abfa29/federation/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a link entity with federation response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

        </section>

        <section anchor="metadata-endpoint"
                 title="Metadata Endpoint">
            <t>
                This endpoint, hosted by the Registration Authority, enables
                the management of metadata of the federation.
            </t>

            <section anchor="create-metadata"
                     title="Create Metadata">
                <t>
                    This is POST API endpoint to create metadata. It needs to pass the required parameter to add the new metadata.
                </t>
                <figure>
                    <preamble>
                        Their are several properties which used for metadata.
                        <t>
                            <texttable anchor="table_metadata" title="Metadata">
                                <ttcol align='left'>Property</ttcol>
                                <ttcol align='left'>Value</ttcol>
                                <ttcol align='left'>Description</ttcol>

                                <!-- -->
                                <c><spanx style="strong">category</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>It is the Category. Enables extensions to define standard categories for searching</c>
                                <!-- -->
                                <c>metadataFormat</c>
                                <c>OPTIONAL</c>
                                <c>The serialization type of the metadata</c>
                                <!-- -->
                                <c>expiration</c>
                                <c>OPTIONAL</c>
                                <c>The date at which this metadata is no longer valid</c>
                            </texttable>
                        </t>
                    </preamble>
                    <preamble>Non-normative example of add a metadata request</preamble>
                    <artwork><![CDATA[POST /otto/entity HTTP/1.1
{
	"name": "BASIC",
	"descrption": "BASIC............",
	"category": "http://otto-test.gluu.org/schema_category/scope.jsonld"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add a metadata response:</preamble>
                    <preamble>In response it return with "@id" key, It is Unique IRI for the newly added metadata</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/metadata/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="fetch-metadata"
                     title="Fetch Metadata">
                <figure>
                    <preamble>Non-normative example of a get all metadata request</preamble>
                    <artwork><![CDATA[GET /otto/metadata HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a get all metadata response:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="metadata">
                                List of metadata
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "metadata": [
    "http://otto-test.gluu.org/otto/metadata/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/metadata/58f720e1a10d8e1012e76ed5"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata request with depth parameter:</preamble>
                    <artwork><![CDATA[GET /otto/metadata?depth=metadata HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response from depth parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="metadata">
                                List of metadata
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "metadata": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#metadata",
      "@id": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
      "metadataFormat": "Metadata Format",
      "expiration": "2017-04-18T09:20:09.138Z"
    }
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata request to fetch specific metadata: </preamble>
                    <artwork><![CDATA[GET /otto/metadata/58f720e1a10d8e1012e76ed5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response from specified metadata:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#metadata",
  "@id": "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0",
  "metadataFormat": "Metadata Format",
  "expiration": "2017-04-18T09:20:09.138Z"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata request with filter parameter:</preamble>
                    <artwork><![CDATA[GET /otto/metadata/58f5da4957d53d2ffbbb31e0?filter=.metadataFormat HTTP/1.1 ]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response from filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "metadataFormat": [
    "Metadata Format"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata request using pageno and pagelength parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="pageno">
                                The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
                            </t>

                            <t hangText="pagelength">
                                Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[GET /otto/metadata?pageno=1&pagelength=5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response of page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="entity">
                                Contain list of metadata array
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "metadata": [
    "http://otto-test.gluu.org/otto/metadata/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/metadata/58f720e1a10d8e1012e76ed5",
    "http://otto-test.gluu.org/otto/metadata/58f720e1a10d8e1012e76ed6",
    "http://otto-test.gluu.org/otto/metadata/58f720e1a10d8e1012e76ed7",
    "http://otto-test.gluu.org/otto/metadata/58f720e1a10d8e1012e76ed8"
  ],
  "totalResults": 11,
  "itemsPerPage": 5,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

            </section>

            <section anchor="update-metadata"
                     title="Update Metadata">
                <t>
                    This is PUT API endpoint to update metadata. It needs to pass the value of the field which you want to update. It will update only those field which you passed into the parameter. The possible parameter need to pass for update, refer <xref target="create-metadata"/>.
                </t>
                <figure>
                    <preamble>Non-normative example of a metadata update request:</preamble>
                    <artwork><![CDATA[PUT /otto/metadata/5909b4218489131c19abfa29 HTTP/1.1

{
	"metadataFormat": "metadata format ....",
	"expiration": "10/10/2017"
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata update response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="delete-metadata"
                     title="Delete Metadata">
                <t>
                    This is DELETE API endpoint to delete metadata. It needs to pass the unique id of metadata.
                </t>
                <figure>
                    <preamble>Non-normative example of a metadata request: </preamble>
                    <artwork><![CDATA[DELETE /otto/metadata/5909b4218489131c19abfa29 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

        </section>

        <section anchor="schema-endpoint"
                 title="Schema Endpoint">
            <t>
                This endpoint, hosted by the Registration Authority, enables
                the management of schema supported by federation.
            </t>

            <section anchor="create-schema"
                     title="Create schema">
                <t>
                    This is POST API to create schema. It needs to pass the required parameter to add the new schema.
                </t>
                <figure>
                    <preamble>
                        Their are several properties which used for schema.
                        <t>
                            <texttable anchor="table_schema" title="Schema">
                                <ttcol align='left'>Property</ttcol>
                                <ttcol align='left'>Value</ttcol>
                                <ttcol align='left'>Description</ttcol>

                                <!-- -->
                                <c><spanx style="strong">name</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>Identifier for this schema item</c>
                                <!-- -->
                                <c><spanx style="strong">category</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>The Extensions defined in extensions like "attribute" or "scope"</c>
                                <!-- -->
                                <c>description</c>
                                <c>OPTIONAL</c>
                                <c>The Human understandable explanation of this term.</c>
                                <!-- -->
                                <c><spanx style="strong">required</spanx></c>
                                <c><spanx style="strong">REQUIRED</spanx></c>
                                <c>Whether this schema element is required</c>
                                <!-- -->
                                <c>url</c>
                                <c>URL</c>
                                <c>The URL with more information about this schema</c>
                                <!-- -->
                                <c>supportedBy</c>
                                <c>OPTIONAL</c>
                                <c>It is the instance or array of Federation or Entity. Which federations support this schema</c>
                                <!-- -->
                                <c>sameAs</c>
                                <c>OPTIONAL</c>
                                <c>It is the URL or array of URL. Link to another similiar schema class</c>
                            </texttable>
                        </t>
                    </preamble>
                    <preamble>Non-normative example of add a schema request</preamble>
                    <artwork><![CDATA[POST /otto/schema HTTP/1.1
{
   "name":"given_name",
   "category":"https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
   "description":"Person's first name",
   "required":false,
   "url":"https://en.wikipedia.org/wiki/Given_name",
   "sameAs":[
      "https://schema.org/givenName",
      "https://erasmus.gluu.org/schema/457c"
   ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of add a schema response:</preamble>
                    <preamble>In response it return with "@id" key, It is Unique IRI for the newly added schema</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@id": "http://otto-test.gluu.org/otto/schema/5909b4218489131c19abfa29"
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="fetch-schema"
                     title="Fetch Schema">
                <figure>
                    <preamble>Non-normative example of a get all schema request</preamble>
                    <artwork><![CDATA[GET /otto/schema HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a get all schema response:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="schema">
                                List of schema
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "schema": [
    "http://otto-test.gluu.org/otto/schema/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/schema/58f720e1a10d8e1012e76ed5"
  ],
  "totalResults": 2,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema request with depth parameter:</preamble>
                    <artwork><![CDATA[GET /otto/schema?depth=schema HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a federation response from depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json

{
  "@context": "http://otto-test.gluu.org/otto/schema",
  "schema": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#schema",
      "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956",
      "name": "given_name",
      "category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
      "required": false,
      "url": "https://en.wikipedia.org/wiki/Given_name",
      "sameAs": "https://schema.org/givenName,https://erasmus.gluu.org/schema/457c",
      "supportedBy": [
        "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
      ]
    }
  ],
  "totalResults": 1,
  "itemsPerPage": 0,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema request to fetch specific schema unique Id:</preamble>
                    <artwork><![CDATA[GET /otto/schema/58f720e1a10d8e1012e76ed5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema response from specified schema unique Id:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#schema",
  "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956",
  "name": "given_name",
  "category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
  "required": false,
  "url": "https://en.wikipedia.org/wiki/Given_name",
  "sameAs": "https://schema.org/givenName,https://erasmus.gluu.org/schema/457c",
  "supportedBy": [
    "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema request with specified schema and depth parameter: </preamble>
                    <artwork><![CDATA[GET /otto/schema/590afffd30dd080ed3cda956?depth=supportedBy HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema response from specified schema and depth parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#schema",
  "@id": "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956",
  "name": "given_name",
  "category": "https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
  "required": false,
  "url": "https://en.wikipedia.org/wiki/Given_name",
  "sameAs": "https://schema.org/givenName,https://erasmus.gluu.org/schema/457c",
  "supportedBy": [
    {
      "@context": "https://rawgit.com/KantaraInitiative/wg-otto/master/html/otto-vocab-1.0.html#federation",
      "@id": "http://otto-test.gluu.org/otto/federations/58f7200bcf5e0a0f09cf2c3c",
      "name": "fed1",
      "url": "http://otto-test.gluu.org/otto/federation",
      "registeredBy": "http://otto-test.gluu.org/otto/registrationAuthority/58f5da4957d53d2ffbbb31df",
      "description": "fedearation fedearation",
      "dataProtectionCodeOfConduct": "https://fd.org",
      "federationAgreement": "https://fd.org",
      "federationPolicy": "https://fd.org",
      "securityContact": [
        {
          "contactNo": "+485647556566",
          "name": "Security Person1"
        }
      ],
      "executiveContact": [
        {
          "contactNo": "+485647556566",
          "name": "Executive Person1"
        }
      ],
      "technicalContact": [
        {
          "contactNo": "+485647556566",
          "name": "Technical Person1"
        }
      ],
      "sponsor": [
        "http://otto-test.gluu.org/otto/participant/58f720e1a10d8e1012e76ed5"
      ],
      "federates": [
        "http://otto-test.gluu.org/otto/entity/58f7218ca10d8e1012e76ed6"
      ],
      "member": [
        "http://otto-test.gluu.org/otto/participant/58f720c7a10d8e1012e76ed4"
      ],
      "trustMarkDefinitionSupported": [
        "https://fd.org"
      ],
      "badgeSupported": [
        "http://otto-test.gluu.org/otto/badge/58fdfa39a6a02d203267da37"
      ],
      "supports": [
        "http://otto-test.gluu.org/otto/schema/590afffd30dd080ed3cda956"
      ],
      "metadata": [
        "http://otto-test.gluu.org/otto/metadata/58f5da4957d53d2ffbbb31e0"
      ]
    }
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema request with filter parameter: </preamble>
                    <artwork><![CDATA[GET /otto/schema/58f5da4957d53d2ffbbb31e0?filter=.name HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema response from filter parameter:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "name": [
    "given_name"
  ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema request using page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="pageno">
                                The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.
                            </t>

                            <t hangText="pagelength">
                                Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[GET /otto/metadata?pageno=1&pagelength=5 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a metadata response of page no and page length parameter:</preamble>
                    <preamble>
                        <list hangIndent="6" style="hanging">
                            <t hangText="schema">
                                Contain list of schema array
                            </t>

                            <t hangText="itemsPerPage">
                                Non-negative integer.  Specifies the number of query results returned in a query response page, e.g., 10.
                            </t>

                            <t hangText="totalResults">
                                Non-negative integer.  Specifies the total number
                                of results matching the client query, e.g., 1000.
                            </t>

                            <t hangText="startIndex">
                                The 1-based index of the first result in the current set of query results, e.g., 1.
                            </t>
                        </list>
                    </preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
{
  "schema": [
    "http://otto-test.gluu.org/otto/schema/58f720c7a10d8e1012e76ed4",
    "http://otto-test.gluu.org/otto/schema/58f720e1a10d8e1012e76ed5",
    "http://otto-test.gluu.org/otto/schema/58f720e1a10d8e1012e76ed6",
    "http://otto-test.gluu.org/otto/schema/58f720e1a10d8e1012e76ed7",
    "http://otto-test.gluu.org/otto/schema/58f720e1a10d8e1012e76ed8"
  ],
  "totalResults": 11,
  "itemsPerPage": 5,
  "startIndex": 1
}
]]>
                    </artwork>
                </figure>
            </section>

            <section anchor="update-schema"
                     title="Update Schema">
                <t>
                    This is PUT API endpoint to update the schema. It needs to pass the value of the field which you want to update. It will update only those field which you passed into parameter.
                    The possible parameter you can passed for update, refer <xref target="create-schema"/>
                </t>
                <figure>
                    <preamble>Non-normative example of a schema update request</preamble>
                    <artwork><![CDATA[PUT /otto/schema/5909b4218489131c19abfa29 HTTP/1.1
{
   "name":"given_name",
   "category":"https://docs.kantarainitiative.org/otto/openid-vocab-1.0#UserClaim",
   "description":"Person's first name",
   "required":false,
   "url":"https://en.wikipedia.org/wiki/Given_name",
   "sameAs":[
      "https://schema.org/givenName",
      "https://erasmus.gluu.org/schema/457c"
   ]
}
]]>
                    </artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema update response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="delete-schema"
                     title="Delete Schema">
                <t>
                    This is DELETE API to delete schema. you need to pass schema unique id for delete specific schema.
                </t>
                <figure>
                    <preamble>Non-normative example of a delete schema request</preamble>
                    <artwork><![CDATA[DELETE /otto/schema/5909b4218489131c19abfa29 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a delete schema response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="link-schema-federation"
                     title="Link schema with federation">
                <t>
                    This is POST API endpoint for link schema to the Federation. It shows which federations support this schema.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Schema Id">
                            first path parameter is schema  unique id.
                        </t>

                        <t hangText="Federation Id">
                            Second path parameter is Federation unique id.
                        </t>
                    </list>
                </t>

                <figure>
                    <preamble>Non-normative example of a schema request to link with federation: </preamble>
                    <artwork><![CDATA[POST /otto/schema/5909b4218489131c19abfa29/federation/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema response to link with federation:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="link-schema-entity"
                     title="Link schema with entity">
                <t>
                    This is POST API endpoint for link schema to the Entity. It show which entity support this schema.
                </t>
                <t>
                    Their are two request parameter.
                    <list hangIndent="6" style="hanging">
                        <t hangText="Schema Id">
                            first path parameter is schema  unique id.
                        </t>

                        <t hangText="Entity Id">
                            Second path parameter is entity unique id.
                        </t>
                    </list>
                </t>

                <figure>
                    <preamble>Non-normative example of a schema request to link with entity: </preamble>
                    <artwork><![CDATA[POST /otto/schema/5909b4218489131c19abfa29/entity/58f7218ca10d8e1012e76ed6 HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a schema response to link with entity:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK ]]></artwork>
                </figure>
            </section>

            <section anchor="schema-category"
                     title="Schema Categories">
                <t>
                    Fetch categories.
                </t>
                <figure>
                    <preamble>Non-normative example of a fetch categories request</preamble>
                    <artwork><![CDATA[POST /otto/schema/categories HTTP/1.1 ]]></artwork>
                </figure>

                <figure>
                    <preamble>Non-normative example of a fetch categories response:</preamble>
                    <artwork><![CDATA[HTTP/1.1 200 OK
[
  "http://otto-test.gluu.org/schema_category/acr.jsonld",
  "http://otto-test.gluu.org/schema_category/scope.jsonld",
  "http://otto-test.gluu.org/schema_category/userclaim.jsonld"
]
]]>
                    </artwork>
                </figure>
            </section>

        </section>

        <section anchor="Acknowledgments" title="Acknowledgments">
            <t>The following people made contributions to the development of this
                specification:
                <list style="symbols">

                    <t>Judith Bush</t>

                    <t>Steve Carmody</t>

                    <t>Peter Davis</t>

                    <t>Keith Hazelton</t>

                    <t>Roland Hedberg</t>

                    <t>Rainer H??rbe</t>

                    <t>Leif Johansson</t>

                    <t>Alan Karp</t>

                    <t>Nate Klingenstein</t>

                    <t>Ken Klingenstein</t>

                    <t>Eve Maler</t>

                    <t>Nicholas Roy</t>

                    <t>Rhys Smith</t>

                    <t>David Walker</t>

                    <t>Colin Wallis</t>

                    <t>Jim Willeke</t>

                    <t>Ian Young</t>

                </list>
            </t>

            <t>Additional contributors to this specification include the Kantara OTTO
                Work Group participants, a list of whom can be found at<xref
                        target="OttoWgParticipants"/>.
            </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <reference anchor="BCP195" target="https://tools.ietf.org/html/bcp195">
                <front>
                    <title>Recommendations for Secure Use of Transport Layer Security
                        (TLS) and Datagram Transport Layer Security (DTLS)
                    </title>

                    <author initials="Y." surname="Sheffer">
                        <organization/>
                    </author>

                    <date day="" month="May" year="2015"/>
                </front>
            </reference>

            <!-- -->
            &RFC2119;

            <!-- Uniform Resource Identifier (URI): Generic Syntax -->
            &RFC3986;

            <!-- Defining Well-Known Uniform Resource Identifiers (URIs) -->
            &RFC5785;

            <!-- The OAuth 2.0 Authorization Framework -->
            &RFC6749;

            <!--  The JavaScript Object Notation (JSON) Data Interchange Format -->
            &RFC7159;

        </references>

        <references title="Informative References">

            <reference anchor="OttoWgParticipants"
                       target="http://kantarainitiative.org/confluence/display/OTTO/Participant+roster">
                <front>
                    <title>OTTO Participant Roster</title>

                    <author initials="M." surname="Schwartz">
                        <organization>Schwartz</organization>
                    </author>
                    <date day="" month="" year="2016"/>
                </front>
            </reference>
        </references>
    </back>
</rfc>
